<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="appMapper">
	
	<resultMap type="Professor" id="pResult">
		<result column="prof_no" property="profNo" />
		<result column="prof_app_time" property="profAppTime" />
		<result column="prof_app_day" property="profAppDay" />
	</resultMap>
	
	<resultMap type="Student" id="sResult">
		<result column="stud_no" property="studNo" />
		<result column="prof_no" property="profNo2" />
		<result column="prof_app_time" property="studAppTime" />
		<result column="prof_app_day" property="studAppDay" />
		<result column="prof_name" property="profName" />
		<result column="sysdate" property="appDate" />
	</resultMap>
	
	<resultMap type="Appointment" id="appResult">
		<result column="app_no" property="appNo" />
		<result column="stud_no" property="studNo" />
		<result column="prof_no" property="profNo" />
		<result column="title" property="title" />
		<result column="content" property="content" />
		<result column="enroll_date" property="enrollDate" />
		<result column="app_date" property="appDate" />
		<result column="app_status" property="appStatus" />
		<result column="reason" property="reason" />
		<result column="status" property="status" />
		<result column="prof_name" property="profName" />
	</resultMap>

	<update id="updateAvailableTime">
		update
		       professor
		   set prof_app_day = #{profAppDay}
		     , prof_app_time = #{profAppTime}
		 where prof_no = #{profNo}
	</update>
	
	<select id="selectAvailableTime" resultMap="pResult">
		select 
		       prof_no
			 , prof_app_day
			 , prof_app_time
		  from professor
		 where prof_no = #{profNo}
	</select>
	
	<select id="selectStuAppInfo" resultMap="sResult">
		select
		       stud_no
		     , prof_no
		     , kor_name "prof_name"
		     , prof_app_day
		     , prof_app_time
		     , to_char(sysdate, 'yyyy-mm-dd') "sysdate"
		  from student
		  join professor using (prof_no)
		  join users on (user_no = prof_no)
		 where stud_no = #{userNo}
	</select>
	
	<insert id="enrollApp">
		insert
		  into appointment
		  (
		    app_no
		  , stud_no
		  , prof_no
		  , title
		  , content
		  , enroll_date
		  , app_date
		  , app_status
		  )
		  values
		  (
		    seq_appno.nextval
		  , #{studNo}
		  , #{profNo}
		  , #{title}
		  , #{content}
		  , sysdate
		  , #{appDate}
		  , 1
		  )
	</insert>
	
	<select id="selectAppListCount" resultType="_int">
		select
		       count(*)
		  from appointment
		 where stud_no = #{userNo}
		   and status = 'Y'
	</select>
	
	<select id="selectAppList" resultMap="appResult">
		select
		       app_no
		     , stud_no
		     , prof_no
		     , kor_name "prof_name"
		     , title
		     , content
		     , to_char(enroll_date, 'yyyy-mm-dd') "enroll_date"
		     , app_date
		     , app_status
		     , reason
		  from appointment
		  join users on (user_no = prof_no)
		 where stud_no = #{userNo}
		   and status = 'Y'
		 order
		    by app_no desc
	</select>
	
	<select id="selectApp" resultMap="appResult">
		select
		       app_no
		     , stud_no
		     , prof_no
		     , kor_name "prof_name"
		     , title
		     , content
		     , to_char(enroll_date, 'yyyy-mm-dd') "enroll_date"
		     , app_date
		     , app_status
		     , reason
		  from appointment
		  join users on (user_no = prof_no)
		 where app_no = #{appNo}
		   and status = 'Y'
	</select>
	
	<update id="editApp">
		update
		       appointment
		   set title = #{title}
		     , content = #{content}
		  	 , app_date = #{appDate}
		 where app_no = #{appNo}
	</update>
	
	<update id="deleteApp">
		update
		       appointment
		   set status = 'N'
		 where app_no = #{appNo}
	</update>
</mapper>
