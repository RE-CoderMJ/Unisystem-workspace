<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="studentMapper">

	<resultMap id="usersResult" type="Users">
		<result column="user_no" property="userNo" />
		<result column="password" property="userPwd" />
		<result column="kor_name" property="korName" />
		<result column="eng_name" property="engName" />
		<result column="birthday" property="birthday" />
		<result column="gender" property="gender" />
		<result column="email" property="email" />
		<result column="phone" property="phone" />
		<result column="address" property="address" />
		<result column="nation" property="nation" />
		<result column="webmail" property="webMail" />
		<result column="user_div" property="userDiv" />
		<result column="profile_img" property="profileImg" />
		
		<!-- STUDENT -->
		<result column="stud_no" property="studNo" />
		<result column="sprof_name" property="sprofName" />
		<result column="stud_univ" property="studUniv" />
		<result column="stud_department" property="studDepartment" />
		<result column="stud_major" property="studMajor" />
		<result column="stud_minor" property="studMinor" />
		<result column="stud_into" property="studInto" />
		<result column="stud_grad" property="studGrad" />
		<result column="stud_division" property="studDivision" />
		<result column="stud_status" property="studStatus" />
		<result column="stud_semester" property="studSemester" />
	</resultMap>
	 
	<select id="selectListCount" resultType="_int">
		SELECT
			   COUNT(*)
		  FROM STUDENT
	</select>
	
	<select id="selectStudentList" resultMap="usersResult">
		SELECT 
		       STUD_NO
		     , U.KOR_NAME "kor_name"
             , U2.KOR_NAME "sprof_name"
		     , STUD_UNIV
		     , STUD_DEPARTMENT
		     , STUD_MAJOR
		     , STUD_STATUS
		  FROM STUDENT S
		  JOIN USERS U ON(STUD_NO = U.USER_NO)
          JOIN USERS U2 ON(PROF_NO = U2.USER_NO)
		 WHERE STUD_STATUS != 4
		 ORDER
	        BY STUD_NO DESC
	</select>
	
	<select id="selectDepartment" resultMap="usersResult">
		SELECT DISTINCT 
		       STUD_DEPARTMENT
		  FROM STUDENT
		 WHERE STUD_UNIV = #{studUniv}
	</select>
	
	<select id="selectSearchCount" resultType="_int">
		SELECT
			   COUNT(*)
		  FROM STUDENT
		  JOIN USERS ON(STUD_NO = USER_NO)
		<choose>
		 	<when test="univ.equals('')">
		 	 	WHERE KOR_NAME LIKE '%'||#{keyword}||'%'
		 	</when>
		 	<when test="!univ.equals('') and depart.equals('')">
		 		WHERE STUD_UNIV = #{univ}
		 	</when>
		 	<when test="keyword.equals('')">
			 	WHERE STUD_UNIV = #{univ}
		  	      AND STUD_DEPARTMENT = #{depart} 
		 	</when>
		 	<otherwise>
		 		WHERE STUD_UNIV = #{univ}
   		   	      AND STUD_DEPARTMENT = #{depart}  
   	     	      AND KOR_NAME LIKE '%'||#{keyword}||'%'
		 	</otherwise>
		 </choose>
	</select>
	
	<select id="searchStudent" resultMap="usersResult">
		SELECT 
		       STUD_NO
		     , U.KOR_NAME "KOR_NAME"
             , U2.KOR_NAME "SPROF_NAME"
		     , STUD_UNIV
		     , STUD_DEPARTMENT
		     , STUD_MAJOR
		     , STUD_STATUS
		     , U.PHONE
		     , U.EMAIL
		  FROM STUDENT S
		  JOIN USERS U ON(STUD_NO = U.USER_NO)
          JOIN USERS U2 ON(PROF_NO = U2.USER_NO)
		 <choose>
		 	<when test="univ.equals('')">
		 	 	WHERE U.KOR_NAME LIKE '%'||#{keyword}||'%'
		 	</when>
		 	<when test="!univ.equals('') and depart.equals('')">
		 		WHERE STUD_UNIV = #{univ}
		 	</when>
		 	<when test="keyword.equals('')">
			 	WHERE STUD_UNIV = #{univ}
		  	      AND STUD_DEPARTMENT = #{depart} 
		 	</when>
		 	<otherwise>
		 		WHERE STUD_UNIV = #{univ}
   		   	      AND STUD_DEPARTMENT = #{depart}  
   	     	      AND U.KOR_NAME LIKE '%'||#{keyword}||'%'
		 	</otherwise>
		 </choose>
		  ORDER
		     BY U.KOR_NAME
	</select>
	
	<delete id="studentDelete1">
		DELETE 
		       STUDENT 
		 WHERE STUD_NO = #{studNo}
	</delete>
	
	<delete id="studentDelete2">
		DELETE 
		       USERS 
		 WHERE USER_NO = #{studNo}	
	</delete>
	
	<insert id="studentInsert1">
		INSERT 
		  INTO USERS 
		     ( 
		       USER_NO
		     , PASSWORD
		     , KOR_NAME
		     , ENG_NAME
		     , BIRTHDAY
		     , GENDER
		     , EMAIL
		     , PHONE
		     , ADDRESS
		     , NATION
		     , WEBMAIL
		     , USER_DIV
		     , PROFILE_IMG
		     )
		       VALUES
		     (
		       (TO_CHAR(SYSDATE, 'YYYY')) || SEQ_STUDENT.NEXTVAL
		     , #{birthday}
		     , #{korName}   
		     , #{engName}
		     , #{birthday}
		     , #{gender}
		     , #{email}
		     , #{phone}
		     , #{address}
		     , #{nation}
		     , ((TO_CHAR(SYSDATE, 'YYYY')) || SEQ_STUDENT.CURRVAL) || '@unisystem.com'
		     , 1
		     , #{profileImg}
		     )
	</insert>
	
	<insert id="studentInsert2">
	    INSERT 
		  INTO STUDENT 
		     ( 
		       STUD_NO
		     , PROF_NO
		     , STUD_UNIV
		     , STUD_DEPARTMENT
		     , STUD_MAJOR
		     , STUD_MINOR
		     , STUD_INTO
		     , STUD_GRAD
		     )
		       VALUES
		     (
		       (TO_CHAR(SYSDATE, 'YYYY')) || SEQ_STUDENT.CURRVAL
		     , NULL
		     , #{studUniv}
		     , #{studDepartment}
		     , #{studMajor}
		     , NULL
		     , (TO_CHAR(SYSDATE, 'YYYY')) || '.03.02'
		     , NULL
		     )
	</insert>
	
	<select id="StudentInfo" resultMap="usersResult">
		SELECT
		       U.USER_NO
		     , U.PASSWORD
		     , U.KOR_NAME
		     , U.ENG_NAME
		     , U.BIRTHDAY
		     , U.GENDER
		     , U.EMAIL
		     , U.PHONE
		     , U.ADDRESS
		     , U.NATION
		     , U.WEBMAIL
		     , U.USER_DIV
		     , U.PROFILE_IMG
		     , STUD_UNIV
		     , STUD_DEPARTMENT
		     , STUD_MAJOR
		     , STUD_MINOR
		     , STUD_INTO
		     , STUD_GRAD
		     , STUD_DIVISION
		     , STUD_STATUS
		     , TOTAL_SEMESTER
		     , U2.KOR_NAME "SPROF_NO"
		  FROM USERS U
		  JOIN STUDENT ON (U.USER_NO = STUD_NO)
		  JOIN USERS U2 ON (PROF_NO = U2.USER_NO)
		 WHERE U.USER_NO = #{studNo}
	</select>
	
	<update id="studentUpdateInfo">
		UPDATE 
		       USERS
		   SET ENG_NAME = #{engName}
		     , PHONE = #{phone}
		     , EMAIL = #{email}
		     , ADDRESS = #{address}
		 WHERE USER_NO = #{userNo}
	</update>
</mapper>
