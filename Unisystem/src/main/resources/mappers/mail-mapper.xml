<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="mailMapper">
	
	<resultMap type="MailFrom" id="fromResult">
		<result column="mail_from_no" property="mailNo" />
		<result column="mail_to_no" property="mailToNo" />
		<result column="from_user" property="userNo" />
		<result column="from_add" property="address" />
		<result column="title" property="title" />
		<result column="content" property="content" />
		<result column="send_date" property="sendDate" />
		<result column="to_me" property="toMe" />
		<result column="save_status" property="saveStatus" />
		<result column="to_user" property="userToNo" />
		<result column="file_name" property="fileName" />
		<result column="important" property="important" />
		<result column="from_name" property="fromName" />
		<result column="to_name" property="userToName" />
		<result column="read_date" property="readDate" />
	</resultMap>
	
	<resultMap type="MailTo" id="toResult">
		<result column="mail_to_no" property="mailNo" />
		<result column="mail_from_no" property="mailFromNo" />
		<result column="to_user" property="userToNo" />
		<result column="to_add" property="address" />
		<result column="important" property="important" />
		<result column="send_date" property="sendDate" />
		<result column="read_date" property="readDate" />
		<result column="status" property="status" />
		<result column="spam_status" property="spam_status" />
		<result column="cc_status" property="ccStatus" />
		<result column="save_status" property="saveStatus" />
		<result column="title" property="title" />
		<result column="content" property="content" />
		<result column="file_name" property="fileName" />
		<result column="from_user" property="userFromNo" />
		<result column="from_add" property="userFromAdd" />
		<result column="from_name" property="userFromName" />
		<result column="to_name" property="userToName" />
		<result column="type" property="type" />
		<result column="to_me" property="toMe" />
	</resultMap>
	
	<resultMap type="Attachment" id="attResult">
		<result column="attach_no" property="attachNo" />
		<result column="ref_no" property="refNo" />
		<result column="origin_name" property="originName" />
		<result column="change_name" property="changeName" />
		<result column="path" property="path" />
	</resultMap>
	
	<resultMap type="Contact" id="conResult">
		<result column="contact_no" property="contactNo" />
		<result column="user_no" property="userNo" />
		<result column="name" property="name" />
		<result column="email" property="email" />
		<result column="phone" property="phone" />
	</resultMap>
	
	<!-- 임시저장 -->
	<insert id="saveDraft">
		insert
		  into mail_from
		  (
		    mail_from_no
		  , from_user
		  , from_add
		  , to_user
		  , title
		  , content
		  , save_status
		  )
		  values
		  (
		    seq_mfno.nextval
		  , #{userNo}
		  , #{userNo} || '@unisystem.com'
		  , #{userToNo}
		  , #{title}
		  , #{content}
		  , 'Y'
		  )
	</insert>
	
	<!-- 내게쓰기 임시저장 -->
	<insert id="saveToMeDraft">
		insert
		  into mail_from
		  (
		    mail_from_no
		  , from_user
		  , from_add
		  , to_user
		  , title
		  , content
		  , save_status
		  , to_me
		  )
		  values
		  (
		    seq_mfno.nextval
		  , #{userNo}
		  , #{userNo} || '@unisystem.com'
		  , #{userToNo}
		  , #{title}
		  , #{content}
		  , 'Y'
		  , 'Y'
		  )
	</insert>
	
	<!-- 임시보관함 -->
	<select id="selectDraftListCount" resultType="_int">
		select
		       count(*)
		  from mail_from
		 where from_user = #{userNo}
		   and save_status = 'Y'
		   and status = 'N'
	</select>
	
	<select id="selectDraftList" resultMap="fromResult">
		select
			   mail_from_no
			 , to_user
			 , title
			 , content
			 , send_date
	      from mail_from
		 where from_user = #{userNo}
		   and save_status = 'Y'
		   and status = 'N'
		 order
		    by mail_from_no desc
	</select>
	
	<!-- 임시보관 메일 상세조회 -->
	<select id="selectDraft" resultMap="fromResult">
		select
			   mail_from_no
			 , to_user
			 , title
			 , content
		  from mail_from
		 where mail_from_no = #{mfNo}
		   and save_status = 'Y'
	</select>
	
	
	<!-- 메일작성 -->
	<update id="updateMailFrom">
		update
			   mail_from
		   set title = #{title}
		     , content = #{content}
		     , send_date = sysdate
		     , save_status = 'N'
		 where mail_from_no = #{mailNo}
		   and from_user = #{userNo}
	</update>
	
	<!-- 참조메일 작성 -->
	<insert id="insertMailFrom">
		insert
		  into mail_from
		  (
		    mail_from_no
		  , from_user
		  , from_add
		  , to_user
		  , title
		  , content
		  )
		  values
		  (
		    seq_mfno.nextval
		  , #{userNo}
		  , #{userNo} || '@unisystem.com'
		  , #{userToNo}
		  , #{title}
		  , #{content}
		  )
	</insert>
	
	<!-- 내게쓰기 작성 -->
	<insert id="insertMailToMeFrom">
		insert
		  into mail_from
		  (
		    mail_from_no
		  , from_user
		  , from_add
		  , to_user
		  , title
		  , content
		  , to_me
		  )
		  values
		  (
		    seq_mfno.nextval
		  , #{userNo}
		  , #{userNo} || '@unisystem.com'
		  , #{userToNo}
		  , #{title}
		  , #{content}
		  , 'Y'
		  )
	</insert>
	
	<insert id="insertDraftMailTo">
		insert
		  into mail_to
		  (
		    mail_to_no
		  , mail_from_no
		  , to_user
		  , to_add
		  )
		  values
		  (
		    seq_mtno.nextval
		  , #{mailFromNo}
		  , #{userToNo}
		  , #{userToNo} || '@unisystem.com'
		  )
	</insert>
	
	<insert id="insertMailTo">
		insert
		  into mail_to
		  (
		    mail_to_no
		  , mail_from_no
		  , to_user
		  , to_add
		  )
		  values
		  (
		    seq_mtno.nextval
		  , seq_mfno.currval
		  , #{userToNo}
		  , #{userToNo} || '@unisystem.com'
		  )
	</insert>
	
	<insert id="insertDraftCcMailTo">
		insert
		  into mail_to
		  (
		    mail_to_no
		  , mail_from_no
		  , to_user
		  , to_add
		  , cc_status
		  )
		  values
		  (
		    seq_mtno.nextval
		  , #{mailFromNo}
		  , #{userToNo}
		  , #{userToNo} || '@unisystem.com'
		  , 'Y'
		  )
	</insert>
	
	<insert id="insertCcMailTo">
		insert
		  into mail_to
		  (
		    mail_to_no
		  , mail_from_no
		  , to_user
		  , to_add
		  , cc_status
		  )
		  values
		  (
		    seq_mtno.nextval
		  , seq_mfno.currval
		  , #{userToNo}
		  , #{userToNo} || '@unisystem.com'
		  , 'Y'
		  )
	</insert>
	
	<!-- 첨부파일 작성 -->
	<insert id="insertAttachment">
		insert
		  into attachment
		  (
		  	attach_no
		  , ref_type
		  , ref_no
		  , origin_name
		  , change_name
		  , path
		  )
		  values
		  (
		  	seq_attno.nextval
		  , 'M'
		  , seq_mfno.currval
		  , #{originName}
		  , #{changeName}
		  , #{path}
		  )
	</insert>
	
	<insert id="insertDraftAttachment">
		insert
		  into attachment
		  (
		  	attach_no
		  , ref_type
		  , ref_no
		  , origin_name
		  , change_name
		  , path
		  )
		  values
		  (
		  	seq_attno.nextval
		  , 'M'
		  , #{refNo}
		  , #{originName}
		  , #{changeName}
		  , #{path}
		  )
	</insert>
	
	<!-- 보낸메일함 -->
	<select id="selectSentListCount" resultType="_int">
		select 
		       count(*)
		  from mail_from
		 where from_user = #{userNo}
		   and save_status = 'N'
		   and status = 'N'
	</select>
	
	<select id="selectSentList" resultMap="fromResult">
		select
			  mail_from_no
			 , to_user
			 , title
			 , send_date
			 , important
             , (select
                       origin_name
                  from attachment
                 where ref_no = f.mail_from_no
                   and ref_type = 'M'
                   and rownum = 1) "file_name"
	      from mail_from f
		 where from_user = #{userNo}
		   and save_status = 'N'
           and to_me = 'N'
           and status = 'N'
		 order
		    by mail_from_no desc
	</select>
	
	<!-- 받은 메일함 -->
	<select id="selectInboxListCount" resultType="_int">
		select
			   count(*)
		  from mail_to
		 where to_user = #{userNo}
		   and status = 'N'
		   and spam_status = 'N'
	</select>
	
	<select id="selectInboxUnreadCount" resultType="_int">
		select
			   count(*)
		  from mail_to
		 where to_user = #{userNo}
		   and read_date is null
		   and status = 'N'
		   and spam_status = 'N'
	</select>
	
	<select id="selectInboxList" resultMap="toResult">
		select
			   mail_to_no
			 , from_add
			 , t.important
			 , title
			 , send_date
			 , read_date
			 , cc_status
			 , (select
                       origin_name
                  from attachment
                 where ref_no = t.mail_from_no
                   and ref_type = 'M'
                   and rownum = 1) "file_name"
		  from mail_to t
		  join mail_from f on (t.mail_from_no = f.mail_from_no)
		 where t.to_user = #{userNo}
		   and t.status = 'N'
		   and spam_status = 'N'
		 order
		 	by mail_to_no desc
	</select>
	
	<!-- 내게 쓴 메일함 -->
	<select id="selectToMeListCount" resultType="_int">
		select
			   count(*)
		  from mail_from
		 where from_user = #{userNo}
	       and save_status = 'N'
		   and to_me = 'Y'
		   and status = 'N'
	</select>
	
	<select id="selectToMeList" resultMap="fromResult">
		select
			   mail_from_no
			 , from_add
			 , important
			 , title
			 , content
			 , send_date
             , (select
                       origin_name
                  from attachment
                 where ref_no = f.mail_from_no
                   and ref_type = 'M'
                   and rownum = 1) "file_name"
	      from mail_from f
		 where from_user = #{userNo}
		   and save_status = 'N'
		   and to_me = 'Y'
		   and status = 'N'
		 order
		    by mail_from_no desc
	</select>
	
	<!-- 첨부파일 메일함 -->
	<select id="selectAttachMailListCount" resultType="_int">
		select 
		       count(*)
		  from
		       (
		         select
		                distinct mail_to_no
		           from (
		                    select 
		                           mail_to_no
		                         , t.mail_from_no
		                      from mail_to t
		                      join mail_from f on(t.mail_from_no = f.mail_from_no)
		                      join users on (from_user = user_no)
		                     where t.to_user = #{userNo}
		                       and t.status = 'N'
		                       and spam_status = 'N'
		                       and t.status = 'N'
		                    )
		             left join attachment a on (ref_no = mail_from_no)
		               where ref_type = 'M'
		                 and a.status = 'Y'
		        )
	</select>
	
	<!-- 첨부파일이 있는 메일함 조회 -->
	<select id="selectAttachMailList" resultMap="toResult">
		select 
		       distinct mail_to_no
		     , kor_name as "from_name"
		     , from_add
		     , mail_from_no
		     , to_user
		     , important
		     , read_date
		     , cc_status
		     , title
		     , send_date
		  from (
		        select 
		               mail_to_no
		             , kor_name
		             , from_add
		             , t.mail_from_no
		             , t.to_user
		             , t.important
		             , read_date
		             , cc_status
		             , title
		             , send_date
		          from mail_to t
		          join mail_from f on(t.mail_from_no = f.mail_from_no)
		          join users on (from_user = user_no)
		         where t.to_user = #{userNo}
		           and t.status = 'N'
		           and spam_status = 'N'
		        )
		 left join attachment a on (ref_no = mail_from_no)
		   where ref_type = 'M'
		     and a.status = 'Y'
		   order
		      by mail_to_no desc
	</select>
	
	<!-- 전체 첨부파일 조회 -->
	<select id="selectAllAttachmentList" resultMap="attResult">
		select
		       attach_no
		     , ref_no
		     , origin_name
		     , change_name
		     , path
		  from attachment a
		  join mail_to on (ref_no = mail_from_no)
		 where ref_type = 'M'
		   and to_user = #{userNo}
		   and a.status = 'Y'
		 order
		    by mail_from_no desc
	</select>
	
	<!-- 읽음 처리 -->
	<update id="updateReadDate">
		update 
			   mail_to
		   set read_date = sysdate
		 where mail_to_no = #{mNo}
	</update>
	
	<!-- 메일 상세조회 -->
	<select id="selectMail" resultMap="toResult">
		select
			   mail_to_no
			 , u.kor_name "from_name"
             , s.kor_name "to_name"
			 , t.mail_from_no
			 , f.from_add
			 , to_add
             , title
             , content
			 , t.important
			 , cc_status
			 , send_date
		  from mail_to t
		  join mail_from f on (t.mail_from_no = f.mail_from_no)
          join users u on (from_user = u.user_no)
          join users s on (t.to_user = s.user_no)
		 where mail_to_no = #{mNo}
	</select>
	
	<!-- 메일 상세조회 -->
	<select id="selectMfMail" resultMap="fromResult">
		select
			   u.kor_name "from_name"
             , s.kor_name "to_name"
			 , f.mail_from_no
			 , f.to_user
			 , from_add
             , title
             , content
			 , f.important
			 , send_date
		  from mail_from f
          join mail_to t on (t.mail_from_no = f.mail_from_no)
          join users u on (from_user = u.user_no)
          join users s on (t.to_user = s.user_no)
		 where f.mail_from_no = #{mNo}
		   and save_status = 'N'
           and rownum = 1
	</select>
	
	<!-- 내게쓴 메일 상세조회 -->
	<select id="selectToMeMail" resultMap="fromResult">
		select
			   u.kor_name "from_name"
			 , mail_from_no
			 , to_user
			 , from_add
             , title
             , content
			 , important
		  from mail_from f
          join users u on (from_user = u.user_no)
		 where f.mail_from_no = #{mNo}
		   and save_status = 'N'
	</select>
	
	<!-- 상세조회용 첨부파일 조회 -->
	<select id="selectAttachmentList" resultMap="attResult">
		select
		       attach_no
		     , ref_no
		     , origin_name
		     , change_name
		     , path
		  from attachment
          join mail_to on (mail_from_no = ref_no)
		 where ref_type = 'M'
		   and mail_to_no = #{mNo}
		 order
		    by attach_no desc
	</select>
	
	<!-- 상세조회용 첨부파일 조회 -->
	<select id="selectMfAttachmentList" resultMap="attResult">
		select
		       attach_no
		     , ref_no
		     , origin_name
		     , change_name
		     , path
		  from attachment
          join mail_from on (mail_from_no = ref_no)
		 where ref_type = 'M'
		   and ref_no = #{mNo}
		 order
		    by attach_no desc
	</select>
	
	<!-- 안읽은 메일함 리스트 조회 -->
	<select id="selectUnreadListCount" resultType="_int">
		select
		       count(*)
		  from mail_to
		 where to_user = #{userNo}
		   and read_date is null
		   and status = 'N'
	</select>
	
	<select id="selectUnreadList" resultMap="toResult">
		select
			   mail_to_no
			 , from_add
			 , t.important
			 , title
			 , from_add
			 , send_date
			 , read_date
			 , cc_status
			 , (select
                       origin_name
                  from attachment
                 where ref_no = t.mail_from_no
                   and ref_type = 'M'
                   and rownum = 1) "file_name"
		  from mail_to t
		  join mail_from f on (t.mail_from_no = f.mail_from_no)
		 where t.to_user = #{userNo}
		   and t.status = 'N'
		   and spam_status = 'N'
		   and read_date is null
		 order
		 	by mail_to_no desc
	</select>
	
	<!-- 수신확인 -->
	<select id="selectReadReceiptListCount" resultType="_int">
		select
		       count(*)
		  from (
		  		 select
			             mail_from_no
			        from mail_from f
			       where from_user = #{userNo}
			         and to_me = 'N'
			         and status = 'N'
			         and save_status = 'N'
		  		)
	</select>
	
	<select id="selectReadReceiptList" resultMap="fromResult">
		 select
             mail_from_no
           , from_user
           , title
           , content
           , send_date
           , to_user
           , important
             , (select
                       read_date
                  from mail_to
                 where mail_from_no = f.mail_from_no
                   and rownum = 1) "read_date"
           , (select
                     origin_name
                from attachment
               where ref_no = mail_from_no
                 and ref_type = 'M'
                 and rownum = 1) "file_name"
        from mail_from f
       where from_user = #{userNo}
         and to_me = 'N'
         and status = 'N'
         and save_status = 'N'
       order
          by mail_from_no desc
	</select>
	
	<update id="changeReadStatus">
		update 
			   mail_to
		   set read_date = null
		 where mail_to_no = #{mNo}
	</update>
	
	<select id="selectImportantListCount" resultType="_int">
		select count(*) 
		  from (
		         select 
		               mail_from_no
		             , to_user
		             , important
		             , title
		             , to_me
                     , send_date
		             , null as read_date
		             , 'N' as cc_status
		             , (select
		                       origin_name
		                  from attachment
		                 where ref_no = f.mail_from_no
		                   and ref_type = 'M'
		                   and rownum = 1) "file_name"
		             , 'f' as type
		          from mail_from f
		         where important = 'Y'
		           and from_user = #{userNo}
		           and status = 'N'
		           
		        union
		        
		        select
		               mail_to_no
		             , from_add
		             , t.important
		             , title
                     , null as to_me
		             , send_date
		             , read_date
		             , cc_status
		             , (select
		                       origin_name
		                  from attachment
		                 where ref_no = t.mail_from_no
		                   and ref_type = 'M'
		                   and rownum = 1) "t_file_name"
		            , 't' as type
		          from mail_to t
		          join mail_from f on (t.mail_from_no = f.mail_from_no)
		         where t.to_user = #{userNo}
		           and t.important = 'Y'
		           and t.status = 'N'
		       )
	</select>
	
	<select id="selectImportantList" resultMap="toResult">
		select * 
		  from (
		         select 
		               mail_from_no
		             , to_user "to_add"
		             , important
		             , title
		             , to_me
                     , send_date
		             , null as read_date
		             , save_status
		             , 'N' as cc_status
		             , (select
		                       origin_name
		                  from attachment
		                 where ref_no = f.mail_from_no
		                   and ref_type = 'M'
		                   and rownum = 1) "file_name"
		             , 'f' as type
		          from mail_from f
		         where important = 'Y'
		           and from_user = #{userNo}
		            and status = 'N'
		           
		        union
		        
		        select
		               mail_to_no
		             , from_add
		             , t.important
		             , title
                     , 'n' as "to_me"
		             , send_date
		             , read_date
		             , null as "save_status"
		             , cc_status
		             , (select
		                       origin_name
		                  from attachment
		                 where ref_no = t.mail_from_no
		                   and ref_type = 'M'
		                   and rownum = 1) "t_file_name"
		            , 't' as type
		          from mail_to t
		          join mail_from f on (t.mail_from_no = f.mail_from_no)
		         where t.to_user = #{userNo}
		           and t.important = 'Y'
		           and t.status = 'N'
		       )
		 order 
		    by mail_from_no desc
	</select>
	
	<update id="moveToTrash">
		update
			   mail_to
		   set status = 'Y'
		 where mail_to_no = #{mNo}
	</update>
	
	<update id="moveToTrashF">
		update
			   mail_from
		   set status = 'Y'
		 where mail_from_no = #{mNo}
	</update>
	
	<select id="selectTrashListCount" resultType="_int">
		select count(*) 
		  from (
		         select 
		               mail_from_no
		             , to_user
		             , important
		             , title
		             , to_me
                     , send_date
		             , null as read_date
		             , 'N' as cc_status
		             , (select
		                       origin_name
		                  from attachment
		                 where ref_no = f.mail_from_no
		                   and ref_type = 'M'
		                   and rownum = 1) "file_name"
		             , 'f' as type
		          from mail_from f
		         where status = 'Y'
		           and from_user = #{userNo}
		           
		        union
		        
		        select
		               mail_to_no
		             , from_add
		             , t.important
		             , title
                     , null as to_me
		             , send_date
		             , read_date
		             , cc_status
		             , (select
		                       origin_name
		                  from attachment
		                 where ref_no = t.mail_from_no
		                   and ref_type = 'M'
		                   and rownum = 1) "t_file_name"
		            , 't' as type
		          from mail_to t
		          join mail_from f on (t.mail_from_no = f.mail_from_no)
		         where t.to_user = #{userNo}
		           and t.status = 'Y'
		       )
	</select>
	
	<select id="selectTrashList" resultMap="toResult">
		select * 
		  from (
		         select 
		               mail_from_no
		             , to_user "to_add"
		             , important
		             , title
		             , to_me
                     , send_date
		             , null as read_date
		             , save_status
		             , 'N' as cc_status
		             , (select
		                       origin_name
		                  from attachment
		                 where ref_no = f.mail_from_no
		                   and ref_type = 'M'
		                   and rownum = 1) "file_name"
		             , 'f' as type
		          from mail_from f
		         where status = 'Y'
		           and from_user = #{userNo}
		           
		        union
		        
		        select
		               mail_to_no
		             , from_add
		             , t.important
		             , title
                     , 'n' as "to_me"
		             , send_date
		             , read_date
		             , null as "save_status"
		             , cc_status
		             , (select
		                       origin_name
		                  from attachment
		                 where ref_no = t.mail_from_no
		                   and ref_type = 'M'
		                   and rownum = 1) "t_file_name"
		            , 't' as type
		          from mail_to t
		          join mail_from f on (t.mail_from_no = f.mail_from_no)
		         where t.to_user = #{userNo}
		           and t.status = 'Y'
		       )
		 order 
		    by mail_from_no desc
	</select>
	
	<!-- 메일 복구 -->
	<update id="recoverMailF">
		update
		       mail_from
		   set status = 'N'
		 where mail_from_no = #{mNo}
	</update>
	
	<update id="recoverMailT">
		update
		       mail_to
		   set status = 'N'
		 where mail_to_no = #{mNo}
	</update>
	
	<!-- 영구삭제 -->
	<update id="deletePermanentlyF">
		update
			   mail_from
		   set status = 'P'
		 where mail_from_no = #{mailNo}
		   and status = 'Y'
	</update>
	
	<delete id="deletePermanentlyD">
		delete
		       mail_from
		 where mail_from_no = #{mailNo}
		   and status = 'Y'
	</delete>
	
	<delete id="deletePermanentlyT">
		delete
		       mail_to
		 where mail_to_no = #{mailNo}
		   and status = 'Y'
	</delete>
	
	<delete id="deleteAttachment">
		delete
		       attachment
		 where ref_no = #{mailNo}
	</delete>
	
	<!-- 중요처리 -->
	<update id="changeImportance">
		update
			   mail_to
		   set important = #{status}
		 where mail_to_no = #{mailNo}
	</update>
	
	<update id="changeImportanceF">
		update
			   mail_from
		   set important = #{status}
		 where mail_from_no = #{mailNo}
	</update>
	
	<!-- 주소록 추가 -->
	<insert id="addContact">
		insert
		  into contact
		  (
		    contact_no
		  , user_no
		  , name
		  , email
		  , phone
		  )
		  values
		  (
		    seq_contact.nextval
		  , #{userNo}
		  , #{name}
		  , #{email}
		  , #{phone}
		  )
	</insert>
	
	<select id="selectContactListCount" resultType="_int">
		select
		       count(*)
		  from contact
		 where user_no = #{userNo}
	</select>
	
	<select id="selectContactList" resultMap="conResult">
		select
		       contact_no
		     , user_no
		     , name
		     , email
		     , phone
		  from contact
		 where user_no = #{userNo}
		 order
		    by contact_no desc
	</select>
	
	<select id="selectContact" resultMap="conResult">
		select
		       contact_no
		     , user_no
		     , name
		     , email
		     , phone
		  from contact
		 where contact_no = #{contactNo}
	</select>
	
	<update id="editContact">
		update
		       contact
		   set name = #{name}
		     , email = #{email}
		     , phone = #{phone}
		 where contact_no = #{contactNo}
	</update>
	
	<update id="deleteContact">
		delete
		       contact
		 where contact_no = #{contactNo}
	</update>
</mapper>
