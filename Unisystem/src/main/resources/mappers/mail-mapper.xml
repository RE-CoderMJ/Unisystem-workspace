<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="mailMapper">
	
	<resultMap type="MailFrom" id="fromResult">
		<result column="mail_from_no" property="mailNo" />
		<result column="from_user" property="userNo" />
		<result column="from_add" property="address" />
		<result column="title" property="title" />
		<result column="content" property="content" />
		<result column="send_date" property="sendDate" />
		<result column="to_me" property="toMe" />
		<result column="save_status" property="saveStatus" />
		<result column="to_user" property="userToNo" />
		<result column="file_name" property="fileName" />
		<result column="important" property="important" />
	</resultMap>
	
	<resultMap type="MailTo" id="toResult">
		<result column="mail_to_no" property="mailNo" />
		<result column="mail_from_no" property="mailFromNo" />
		<result column="to_user" property="userToNo" />
		<result column="to_add" property="address" />
		<result column="important" property="important" />
		<result column="send_date" property="sendDate" />
		<result column="read_date" property="readDate" />
		<result column="status" property="status" />
		<result column="spam_status" property="spam_status" />
		<result column="cc_status" property="ccStatus" />
		<result column="title" property="title" />
		<result column="content" property="content" />
		<result column="file_name" property="fileName" />
		<result column="from_user" property="userFromNo" />
		<result column="from_add" property="userFromAdd" />
		<result column="from_name" property="userFromName" />
	</resultMap>
	
	<resultMap type="Attachment" id="attResult">
		<result column="attach_no" property="attachNo" />
		<result column="ref_no" property="refNo" />
		<result column="origin_name" property="originName" />
		<result column="change_name" property="changeName" />
		<result column="path" property="path" />
	</resultMap>
	
	<!-- 임시저장 -->
	<insert id="saveDraft">
		insert
		  into mail_from
		  (
		    mail_from_no
		  , from_user
		  , from_add
		  , to_user
		  , title
		  , content
		  , save_status
		  )
		  values
		  (
		    seq_mfno.nextval
		  , #{userNo}
		  , #{userNo} || '@unisystem.com'
		  , #{userToNo}
		  , #{title}
		  , #{content}
		  , 'Y'
		  )
	</insert>
	
	<!-- 내게쓰기 임시저장 -->
	<insert id="saveToMeDraft">
		insert
		  into mail_from
		  (
		    mail_from_no
		  , from_user
		  , from_add
		  , to_user
		  , title
		  , content
		  , save_status
		  , to_me
		  )
		  values
		  (
		    seq_mfno.nextval
		  , #{userNo}
		  , #{userNo} || '@unisystem.com'
		  , #{userToNo}
		  , #{title}
		  , #{content}
		  , 'Y'
		  , 'Y'
		  )
	</insert>
	
	<!-- 임시보관함 -->
	<select id="selectDraftListCount" resultType="_int">
		select
		       count(*)
		  from mail_from
		 where from_user = #{userNo}
		   and save_status = 'Y'
	</select>
	
	<select id="selectDraftList" resultMap="fromResult">
		select
			   mail_from_no
			 , to_user
			 , title
			 , content
			 , send_date
	      from mail_from
		 where from_user = #{userNo}
		   and save_status = 'Y'
		 order
		    by mail_from_no desc
	</select>
	
	<!-- 임시보관 메일 상세조회 -->
	<select id="selectDraft" resultMap="fromResult">
		select
			   mail_from_no
			 , to_user
			 , title
			 , content
		  from mail_from
		 where mail_from_no = #{mfNo}
		   and save_status = 'Y'
	</select>
	
	
	<!-- 메일작성 -->
	<update id="updateMailFrom">
		update
			   mail_from
		   set title = #{title}
		     , content = #{content}
		     , send_date = sysdate
		     , save_status = 'N'
		 where mail_from_no = #{mailNo}
		   and from_user = #{userNo}
	</update>
	
	<!-- 참조메일 작성 -->
	<insert id="insertMailFrom">
		insert
		  into mail_from
		  (
		    mail_from_no
		  , from_user
		  , from_add
		  , to_user
		  , title
		  , content
		  )
		  values
		  (
		    seq_mfno.nextval
		  , #{userNo}
		  , #{userNo} || '@unisystem.com'
		  , #{userToNo}
		  , #{title}
		  , #{content}
		  )
	</insert>
	
	<insert id="insertMailToMeFrom">
		insert
		  into mail_from
		  (
		    mail_from_no
		  , from_user
		  , from_add
		  , to_user
		  , title
		  , content
		  , to_me
		  )
		  values
		  (
		    seq_mfno.nextval
		  , #{userNo}
		  , #{userNo} || '@unisystem.com'
		  , #{userToNo}
		  , #{title}
		  , #{content}
		  , 'Y'
		  )
	</insert>
	
	<insert id="insertDraftMailTo">
		insert
		  into mail_to
		  (
		    mail_to_no
		  , mail_from_no
		  , to_user
		  , to_add
		  )
		  values
		  (
		    seq_mtno.nextval
		  , #{mailFromNo}
		  , #{userToNo}
		  , #{userToNo} || '@unisystem.com'
		  )
	</insert>
	
	<insert id="insertMailTo">
		insert
		  into mail_to
		  (
		    mail_to_no
		  , mail_from_no
		  , to_user
		  , to_add
		  )
		  values
		  (
		    seq_mtno.nextval
		  , seq_mfno.currval
		  , #{userToNo}
		  , #{userToNo} || '@unisystem.com'
		  )
	</insert>
	
	<insert id="insertDraftCcMailTo">
		insert
		  into mail_to
		  (
		    mail_to_no
		  , mail_from_no
		  , to_user
		  , to_add
		  , cc_status
		  )
		  values
		  (
		    seq_mtno.nextval
		  , #{mailFromNo}
		  , #{userToNo}
		  , #{userToNo} || '@unisystem.com'
		  , 'Y'
		  )
	</insert>
	
	<insert id="insertCcMailTo">
		insert
		  into mail_to
		  (
		    mail_to_no
		  , mail_from_no
		  , to_user
		  , to_add
		  , cc_status
		  )
		  values
		  (
		    seq_mtno.nextval
		  , seq_mfno.currval
		  , #{userToNo}
		  , #{userToNo} || '@unisystem.com'
		  , 'Y'
		  )
	</insert>
	
	<insert id="insertAttachment">
		insert
		  into attachment
		  (
		  	attach_no
		  , ref_type
		  , ref_no
		  , origin_name
		  , change_name
		  , path
		  )
		  values
		  (
		  	seq_attno.nextval
		  , 'M'
		  , seq_mfno.currval
		  , #{originName}
		  , #{changeName}
		  , #{path}
		  )
	</insert>
	
	<insert id="insertDraftAttachment">
		insert
		  into attachment
		  (
		  	attach_no
		  , ref_type
		  , ref_no
		  , origin_name
		  , change_name
		  , path
		  )
		  values
		  (
		  	seq_attno.nextval
		  , 'M'
		  , #{refNo}
		  , #{originName}
		  , #{changeName}
		  , #{path}
		  )
	</insert>
	
	<!-- 보낸메일함 -->
	<select id="selectSentListCount" resultType="_int">
		select 
		       count(*)
		  from mail_from
		 where from_user = #{userNo}
		   and save_status = 'N'
	</select>
	
	<select id="selectSentList" resultMap="fromResult">
		select
			   mail_from_no
			 , to_user
			 , title
			 , content
			 , send_date
             , (select
                       origin_name
                  from attachment
                 where ref_no = f.mail_from_no
                   and ref_type = 'M'
                   and rownum = 1) "file_name"
	      from mail_from f
		 where from_user = #{userNo}
		   and save_status = 'N'
		 order
		    by mail_from_no desc
	</select>
	
	<!-- 받은 메일함 -->
	<select id="selectInboxListCount" resultType="_int">
		select
			   count(*)
		  from mail_to
		 where to_user = #{userNo}
		   and status = 'N'
		   and spam_status = 'N'
	</select>
	
	<select id="selectInboxList" resultMap="toResult">
		select
			   mail_to_no
			 , from_add
			 , t.important
			 , title
			 , from_add
			 , send_date
			 , read_date
			 , cc_status
			 , (select
                       origin_name
                  from attachment
                 where ref_no = t.mail_from_no
                   and ref_type = 'M'
                   and rownum = 1) "file_name"
		  from mail_to t
		  join mail_from f on (t.mail_from_no = f.mail_from_no)
		 where t.to_user = #{userNo}
		   and status = 'N'
		   and spam_status = 'N'
		 order
		 	by mail_to_no desc
	</select>
	
	<!-- 내게 쓴 메일함 -->
	<select id="selectToMeListCount" resultType="_int">
		select
			   count(*)
		  from mail_from
		 where from_user = #{userNo}
		   and to_me = 'Y'
	</select>
	
	<select id="selectToMeList" resultMap="fromResult">
		select
			   mail_from_no
			 , from_add
			 , important
			 , title
			 , content
			 , send_date
             , (select
                       origin_name
                  from attachment
                 where ref_no = f.mail_from_no
                   and ref_type = 'M'
                   and rownum = 1) "file_name"
	      from mail_from f
		 where from_user = #{userNo}
		   and save_status = 'N'
		   and to_me = 'Y'
		 order
		    by mail_from_no desc
	</select>
	
	<!-- 첨부파일 메일함 -->
	<select id="selectAttachMailListCount" resultType="_int">
		select 
		       count(*)
		  from
		       (
		         select
		                distinct mail_to_no
		           from (
		                    select 
		                           mail_to_no
		                         , t.mail_from_no
		                      from mail_to t
		                      join mail_from f on(t.mail_from_no = f.mail_from_no)
		                      join users on (from_user = user_no)
		                     where t.to_user = #{userNo}
		                       and t.status = 'N'
		                       and spam_status = 'N'
		                    )
		             left join attachment a on (ref_no = mail_from_no)
		               where ref_type = 'M'
		                 and a.status = 'Y'
		        )
	</select>
	
	<select id="selectAttachMailList" resultMap="toResult">
		select 
		       distinct mail_to_no
		     , kor_name as "from_name"
		     , from_add
		     , mail_from_no
		     , to_user
		     , important
		     , read_date
		     , cc_status
		     , title
		     , send_date
		  from (
		        select 
		               mail_to_no
		             , kor_name
		             , from_add
		             , t.mail_from_no
		             , t.to_user
		             , t.important
		             , read_date
		             , cc_status
		             , title
		             , send_date
		          from mail_to t
		          join mail_from f on(t.mail_from_no = f.mail_from_no)
		          join users on (from_user = user_no)
		         where t.to_user = #{userNo}
		           and t.status = 'N'
		           and spam_status = 'N'
		        )
		 left join attachment a on (ref_no = mail_from_no)
		   where ref_type = 'M'
		     and a.status = 'Y'
		   order
		      by mail_to_no desc
	</select>
	
	<select id="selectAllAttachmentList" resultMap="attResult">
		select
		       attach_no
		     , ref_no
		     , origin_name
		     , change_name
		     , path
		  from attachment a
		  join mail_to on (ref_no = mail_from_no)
		 where ref_type = 'M'
		   and to_user = #{userNo}
		   and a.status = 'Y'
		 order
		    by mail_from_no desc
	</select>
	
</mapper>
