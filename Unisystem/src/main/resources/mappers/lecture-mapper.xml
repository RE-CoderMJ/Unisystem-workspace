<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="lectureMapper">
	
	<resultMap type="Lecture" id="lectureResult">
		<result column="class_no" property="classNo" />
		<result column="prof_no" property="profNo" />
		<result column="class_code" property="classCode" />
		<result column="class_kor_name" property="classKorName" />
		<result column="class_eng_name" property="classEngName" />	
		<result column="class_category" property="classCategory" />
		<result column="class_year" property="classYear" />
		<result column="class_semester" property="classSemester" />
		<result column="class_credit" property="classCredit" />	
		<result column="class_location" property="classLocation" />				
		<result column="class_day" property="classDay" />
		<result column="score_att" property="scoreAtt" />
		<result column="score_task" property="scoreTask" />
		<result column="score_mid" property="scoreMid" />
		<result column="score_fin" property="scoreFin" />
		<result column="max_stud" property="maxStud" />
		<result column="curr_stud" property="currStud" />
						
		<result column="rownum" property="rownum" />	
		<result column="stud_no" property="studNo" />
		<result column="class_stud_no" property="classStudNo" />
		<result column="kor_name" property="korName" />
		<result column="attendance_no" property="attendanceNo" />
		<result column="class_title" property="classTitle" />
		<result column="attDate" property="attendanceDateA" />
		<result column="attendance_date" property="attendanceDateB" />
		
		<result column="attendance_status" property="attendanceStatus" />
		<result column="학번" property="stuGrade" />
		<result column="total_semester" property="totalSemester" />
	</resultMap>
	
	<resultMap type="Users" id="usersResult">
		<result column="user_no" property="userNo" />
		<result column="kor_name" property="korName" />
		<result column="phone" property="phone" />		
	</resultMap>
	
	<!-- 학생 - 내가 수강중인 강의 조회 : 로그인한 학생의 수강중인 강의 리스트를 불러오는 sql -->
	<select id="selectStudentClassList" resultMap="lectureResult">
        select
		       class_stud_no
		     , class_kor_name
		     , class_category
		     , kor_name
		     , curr_stud
		     , class_code
		     , class_no
		  from class_stud
		  join class using(class_no)
		  join professor using(prof_no)
		  join users on(prof_no = user_no)
		  where stud_no = #{userNo}
            and status = 'Y'
          order
             by class_code asc
	</select>
	
	<!-- 학생 - 내가 수강중인 강의 조회 : 원하는 년도, 학기에 따라 강의를 불러오는 sql -->
	<select id="selectStudentSearchClassList" resultMap="lectureResult">
        select
		       class_stud_no
		     , class_kor_name
		     , class_category
		     , kor_name
		     , curr_stud
		     , class_code
		  from class_stud
		  join class using(class_no)
		  join professor using(prof_no)
		  join users on(prof_no = user_no)
		  where stud_no = #{userNo}
            and class_year = #{classYear}
            and class_semester = #{classSemester}
          order
             by class_code asc
	</select>
	
	<!-- 학생 - 내가 수강중인 강의 조회 : 년도 리스트를 불러오는 sql -->
	<select id="selectYearList" resultMap="lectureResult">
		select distinct
		       class_year
		  from class
		 order 
		    by class_year desc	
	</select>
	
	<!-- 학생 - 강의홈 : 내가수강중인강의에서 클릭한 강의 정보를 세션영역에 담는 sql -->
	<select id="selectLectureMainPage" resultMap="lectureResult">
		select
		       class_no
		     , prof_no
		     , class_code
		     , class_kor_name
		     , class_eng_name
		     , class_category
		     , class_year
		     , class_semester
		     , class_credit
		     , class_location
		     , class_day
		     , score_att
		     , score_task
		     , score_mid
		     , score_fin
		     , max_stud
		     , curr_stud
		     , kor_name
		  from class
		  join professor using(prof_no)
		  join users on (prof_no = user_no)
		 where class_code = #{lno}	
	</select>
	
	<select id="SelectAttStaListA" resultType="_int">
		select
		       count(attendance_status)
		  from attendance
		  join student using(stud_no)
		  join class using(class_no)
		  join users on(stud_no = user_no)
		 where user_no = #{userNo}
		   and class_code = #{classCode}
		   and attendance_status = 'A'	
	</select>
		
	<!-- 학생 - 온라인 출석부 : 로그인한 학생 정보를 가져오는 sql문 -->
	<select id="selectLoginStuInfo" resultMap="usersResult">
		select
		       user_no
		     , kor_name
		     , phone
		  from users
		 where user_no = #{userNo}	
	</select>

	<select id="SelectAttStaListB" resultType="_int">
		select
		       count(attendance_status)
		  from attendance
		  join student using(stud_no)
		  join class using(class_no)
		  join users on(stud_no = user_no)
		 where user_no = #{userNo}
		   and class_code = #{classCode}
		   and attendance_status = 'B'	
	</select>
	
	<select id="SelectAttStaListC" resultType="_int">
		select
		       count(attendance_status)
		  from attendance
		  join student using(stud_no)
		  join class using(class_no)
		  join users on(stud_no = user_no)
		 where user_no = #{userNo}
		   and class_code = #{classCode}
		   and attendance_status = 'C'	
	</select>
			
	<!--학생 - 온라인출석부  : 현재 진행된 강의 총 개수를 구하는 sql문 -->
	<select id="selectAttListCount" resultType="_int">
		select 
		       count(*)
		  from attendance
		  join student using(stud_no)
		  join users on (stud_no = user_no)
		  join class using(class_no)
		 where user_no  = #{userNo}
		   and class_code = #{classCode} 
	</select>
	
	<!--교수 - 출결관리 : 현재 진행된 강의 총 개수를 구하는 sql문 -->
	<select id="selectProAttListCount" resultType="_int">
		select 
               count(
               distinct
               attendance_date)
		  from attendance
		  join class using(class_no)
          join professor using(prof_no)
          join users on (prof_no = user_no)
		 where user_no  = #{userNo}
		   and class_code = #{classCode}
	</select>

	<!-- 학생 - 온라인출석부  : 선택한 강의의 현재까지 진행한 강의리스트 조회 -->
	<select id="selectAttList" resultMap="lectureResult">
        select
               rownum
             , class_code
             , attendance_no
             , class_title
             , to_char(to_date(attendance_date, 'YYYY-MM-DD'), 'YYYY.MM.DD') "attDate"
             , attendance_status
          from (
                select 
                       *
                  from attendance
                  join class using(class_no)
                  join student using(stud_no)
                  join users on (stud_no = user_no)
                 where class_code = #{classCode}
                   and user_no = #{userNo}
                 order
                    by attendance_date desc             
                ) 
	</select>
	
	<!-- 교수 - 마이페이지 : 진행강의 조회 페이지 리스트를 조회해오는 sql문  -->
	<select id="selectProfessorClassList" resultMap="lectureResult">
		select
		       distinct
		       class_no 
		     , class_code
		     , class_kor_name
		     , class_category
		     , kor_name
		     , curr_stud
		  from class 
		  join professor using(prof_no)
		  join users on (prof_no = user_no)
		  join class_stud using(class_no)
		 where user_no = #{userNo}
		   and status = 'Y'
	</select>
	
	<!-- 교수 - 진행강의조회 : 원하는 년도, 학기에 따라 강의를 불러오는 sql -->
	<select id="SelectProfessorSearchClassList" resultMap="lectureResult">
        select
               distinct
               class_code
		     , class_no
		     , class_kor_name
		     , class_category
		     , kor_name
		     , curr_stud
		  from class
		  join professor using(prof_no)
		  join users on(prof_no = user_no)
          join class_stud using(class_no)
		  where prof_no = #{userNo}
            and class_year = #{classYear}
            and class_semester = #{classSemester}
          order
             by class_code asc	
	</select>
	
	<!-- 교수 - 강의페이지 - 출결관리 : 진행한 강의 리스트 조회 -->
	<select id="selectProAttList" resultMap="lectureResult">
		select 
		       rownum
		     , a.*
		 from (
		        select 
		               distinct
		               class_no
		             , class_code
		             , class_title
		             , to_char(to_date(attendance_date, 'YYYY-MM-DD'), 'YYYY.MM.DD') "attDate"
		             , attendance_date
		          from attendance
		          join class using(class_no)
		          join student using(stud_no)
		          join users on (stud_no = user_no)
		         where class_code = #{classCode}
		         order
		            by "attDate" desc           
		         ) a
	</select>
	
	<!-- 교수 - 강의페이지 - 출결관리 - 출결관리 상세 -->
	<select id="selectAttDetail" resultMap="lectureResult">
		select
               rownum
             , a.*
          from 
              (
               select
                      class_code
                    , class_no
                    , class_title 
                    , substr(stud_no,3,2) "학번"
                    , attendance_date
                    , stud_no
                    , kor_name
                    , total_semester
                from attendance  
                join student using(stud_no)
                join users on (stud_no = user_no)
                join class using(class_no)
               where class_code = #{classCode}
                 and attendance_date = #{attendanceDateB}
                order
                   by stud_no desc	
              ) a
	</select>
	
	<!-- 교수 - 출결관리 - 해당 강의를 듣는 학생 목록 조회 -->
	<select id="AjaxSelectselectAttStuList" resultMap="lectureResult">
		 select 
		         class_no
		       , class_code
		       , stud_no
		       , kor_name
		    from class_stud
		    join student using(stud_no)
		    join users on (stud_no = user_no)
		    join class using(class_no)
		   where class_code = #{classCode}
		   order
		      by stud_no desc	
	</select>
	
	<!-- 교수 - 출결관리 - 새로운 강의 등록 -->
	<insert id="insertAtt">
		insert
		  into attendance
		  (
		    attendance_no
		  , class_no
		  , stud_no
		  , attendance_date
		  , attendance_status
		  , class_title
		  )
		  values
		  (
		    seq_attendance.nextval
		  , #{classNo}
		  , #{studNo}
		  , #{attendanceDateA}
		  , null
		  , #{classTitle}
		  )	
	</insert>
	
	<!-- 교수 - 출결관리 - 학생들의 출결상태를 insert -->
	<insert id="insertAttStatus">
		update
		       attendance
		   set attendance_status = #{status}
		 where attendance_date = '20220107'
	</insert>
	
	<!-- 과제업로드 : 마감상태의 총 게시글 수를 불러오는 sql -->
	<select id="selectHomeworkListCount" resultType="_int">
		select
		       count(*)
		  from homeworkp
		 where status = 'Y'
		   and homeworkp_category = 'I'	
	</select>
	

	<!-- 학생 - 과제업로드 : 마감상태의 총 게시글 리스트를 불러오는 SQL -->
	<!-- 
	<select id="selectHomeworkpList" resultMap="">
		select 
		       homeworkp_no
		     , class_no
		     , homeworkp_name
		     , kor_name
		     , homeworkp_enddatetime
		  from homeworkp
		  join class using(class_no)
		  join professor using(prof_no)
		  join users on (prof_no = user_no)
		 where homeworkp_category = 'I'
		   and status = 'Y'	
	</select>
	 -->


</mapper>
